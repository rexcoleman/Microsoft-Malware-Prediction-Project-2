# src/utils/initialization.py

import os
import logging
import pandas as pd
from src.utils.data_loading_utils import load_sample_data_and_paths, initialize_analysis_results
from src.config_loader import load_json_files
from src.utils.file_operations import load_yaml, load_feature_descriptions, load_metadata_schema, save_yaml
from src.utils.metadata_operations import ensure_data_overview, populate_feature_metadata

def initialize_feature_metadata(paths):
    """
    Initialize feature metadata using the paths provided.

    Parameters:
    paths (dict): Dictionary containing file paths from paths.yaml.
    """
    try:
        feature_metadata, metadata_schema = ensure_data_overview(paths)
        feature_descriptions = load_feature_descriptions(paths['config']['feature_descriptions'])

        feature_metadata = populate_feature_metadata(feature_metadata, feature_descriptions, metadata_schema)

        save_yaml(feature_metadata, paths['config']['feature_metadata'])
        logging.info(f"Feature metadata initialized and saved to: {paths['config']['feature_metadata']}")
    except Exception as e:
        logging.error(f"Error initializing feature metadata: {e}", exc_info=True)

def load_data_and_initialize_results(paths):
    """
    Load sample data and initialize analysis results.

    Parameters:
    paths (dict): Dictionary containing file paths.

    Returns:
    tuple: A tuple containing train_sample DataFrame, test_sample DataFrame, paths dictionary, and metadata schema.
    """
    try:
        json_files = load_json_files()  # Load JSON files from configuration
        # Load sample data
        train_sample, test_sample, paths = load_sample_data_and_paths(paths)
        
        # Initialize analysis results
        initialize_analysis_results(paths['reports']['analysis_results'], json_files)
        
        # Load metadata schema
        schema_path = paths['config']['feature_metadata_schema']
        schema = load_yaml(schema_path)
        
        return train_sample, test_sample, paths, schema
    except Exception as e:
        print(f"Error loading data and initializing results: {e}")
        raise



# def load_data_and_initialize_results(paths):
#     """
#     Load sample data and initialize analysis results.

#     Parameters:
#     paths (dict): Dictionary containing file paths.

#     Returns:
#     tuple: A tuple containing train_sample DataFrame, test_sample DataFrame, paths dictionary, and metadata schema.
#     """
#     try:
#         json_files = load_json_files()  # Load JSON files from configuration
#         # Load sample data
#         train_sample, test_sample, paths = load_sample_data_and_paths(paths)
        
#         # Initialize analysis results
#         initialize_analysis_results(paths['reports']['analysis_results'], json_files)
        
#         # Load metadata schema
#         schema_path = paths['config']['feature_metadata_schema']
#         schema = load_yaml(schema_path)
        
#         return train_sample, test_sample, paths, schema
#     except Exception as e:
#         print(f"Error loading data and initializing results: {e}")
#         raise

def load_sample_data_and_paths(paths):
    """
    Load sample data and return the data along with updated paths.

    Parameters:
    paths (dict): Dictionary containing file paths.

    Returns:
    tuple: A tuple containing train_sample DataFrame, test_sample DataFrame, and paths dictionary.
    """
    try:
        train_sample, test_sample = load_sample_data(paths)
        return train_sample, test_sample, paths
    except Exception as e:
        print(f"Error loading sample data: {e}")
        raise

def load_sample_data(paths):
    """
    Load sample data from the specified paths.

    Parameters:
    paths (dict): Dictionary containing file paths.

    Returns:
    tuple: A tuple containing train_sample DataFrame and test_sample DataFrame.
    """
    try:
        train_sample = pd.read_csv(paths['data']['train_sample'])
        test_sample = pd.read_csv(paths['data']['test_sample'])
        return train_sample, test_sample
    except FileNotFoundError as e:
        print(f"Error reading sample data files: File not found {e.filename}")
        raise
    except pd.errors.ParserError as e:
        print(f"Error reading sample data files: Parsing error {e}")
        raise
    except Exception as e:
        print(f"Unexpected error reading sample data files: {e}")
        raise

def initialize_analysis_results(results_path, json_files):
    """
    Initialize analysis results by creating necessary JSON files.

    Parameters:
    results_path (str): Path to the directory for analysis results.
    json_files (list): List of JSON files to initialize.
    """
    try:
        for json_file in json_files:
            file_path = os.path.join(results_path, json_file)
            if not os.path.exists(file_path):
                with open(file_path, 'w') as f:
                    f.write('{}')  # Create an empty JSON object
    except Exception as e:
        print(f"Error initializing analysis results: {e}")
        raise





# # src/utils/initialization.py

# import os
# import pandas as pd
# from src.utils.data_loading_utils import load_sample_data_and_paths, initialize_analysis_results
# from src.config_loader import load_json_files  

# def load_data_and_initialize_results(paths):
#     """
#     Load sample data and initialize analysis results.

#     Parameters:
#     paths (dict): Dictionary containing file paths.

#     Returns:
#     tuple: A tuple containing train_sample DataFrame, test_sample DataFrame, and paths dictionary.
#     """
#     try:
#         json_files = load_json_files()  # Load JSON files from configuration
#         # Load sample data
#         train_sample, test_sample, paths = load_sample_data_and_paths(paths)
        
#         # Initialize analysis results
#         initialize_analysis_results(paths['reports']['analysis_results'], json_files)
        
#         return train_sample, test_sample, paths
#     except Exception as e:
#         print(f"Error loading data and initializing results: {e}")
#         raise

# def load_sample_data_and_paths(paths):
#     """
#     Load sample data and return the data along with updated paths.

#     Parameters:
#     paths (dict): Dictionary containing file paths.

#     Returns:
#     tuple: A tuple containing train_sample DataFrame, test_sample DataFrame, and paths dictionary.
#     """
#     try:
#         train_sample, test_sample = load_sample_data(paths)
#         return train_sample, test_sample, paths
#     except Exception as e:
#         print(f"Error loading sample data: {e}")
#         raise

# def load_sample_data(paths):
#     """
#     Load sample data from the specified paths.

#     Parameters:
#     paths (dict): Dictionary containing file paths.

#     Returns:
#     tuple: A tuple containing train_sample DataFrame and test_sample DataFrame.
#     """
#     try:
#         train_sample = pd.read_csv(paths['data']['train_sample'])
#         test_sample = pd.read_csv(paths['data']['test_sample'])
#         return train_sample, test_sample
#     except FileNotFoundError as e:
#         print(f"Error reading sample data files: File not found {e.filename}")
#         raise
#     except pd.errors.ParserError as e:
#         print(f"Error reading sample data files: Parsing error {e}")
#         raise
#     except Exception as e:
#         print(f"Unexpected error reading sample data files: {e}")
#         raise

# def initialize_analysis_results(results_path, json_files):
#     """
#     Initialize analysis results by creating necessary JSON files.

#     Parameters:
#     results_path (str): Path to the directory for analysis results.
#     json_files (list): List of JSON files to initialize.
#     """
#     try:
#         for json_file in json_files:
#             file_path = os.path.join(results_path, json_file)
#             if not os.path.exists(file_path):
#                 with open(file_path, 'w') as f:
#                     f.write('{}')  # Create an empty JSON object
#     except Exception as e:
#         print(f"Error initializing analysis results: {e}")
#         raise











# def load_data_and_initialize_results(paths, json_files):
#     """
#     Load sample data and initialize analysis results.

#     Parameters:
#     paths (dict): Dictionary containing file paths.
#     json_files (list): List of JSON files to initialize.

#     Returns:
#     tuple: A tuple containing train_sample DataFrame, test_sample DataFrame, and paths dictionary.
#     """
#     try:
#         # Load sample data
#         train_sample, test_sample, paths = load_sample_data_and_paths(paths)
        
#         # Initialize analysis results
#         initialize_analysis_results(paths['reports']['analysis_results'], json_files)
        
#         return train_sample, test_sample, paths
#     except Exception as e:
#         print(f"Error loading data and initializing results: {e}")
#         raise




# # src/utils/initialization.py

# import os
# import pandas as pd
# from src.utils.data_loading_utils import load_sample_data_and_paths, initialize_analysis_results

# def load_data_and_initialize_results(paths, json_files):
#     """
#     Load sample data and initialize analysis results.

#     Parameters:
#     paths (dict): Dictionary containing file paths.
#     json_files (list): List of JSON files to initialize.

#     Returns:
#     tuple: A tuple containing train_sample DataFrame, test_sample DataFrame, and paths dictionary.
#     """
#     try:
#         # Load sample data
#         train_sample, test_sample, paths = load_sample_data_and_paths(paths)
        
#         # Initialize analysis results
#         initialize_analysis_results(paths['reports']['analysis_results'], json_files)
        
#         return train_sample, test_sample, paths
#     except Exception as e:
#         print(f"Error loading data and initializing results: {e}")
#         raise

# def load_sample_data_and_paths(paths):
#     """
#     Load sample data and return the data along with updated paths.

#     Parameters:
#     paths (dict): Dictionary containing file paths.

#     Returns:
#     tuple: A tuple containing train_sample DataFrame, test_sample DataFrame, and paths dictionary.
#     """
#     try:
#         train_sample, test_sample = load_sample_data(paths)
#         return train_sample, test_sample, paths
#     except Exception as e:
#         print(f"Error loading sample data: {e}")
#         raise

# def load_sample_data(paths):
#     """
#     Load sample data from the specified paths.

#     Parameters:
#     paths (dict): Dictionary containing file paths.

#     Returns:
#     tuple: A tuple containing train_sample DataFrame and test_sample DataFrame.
#     """
#     try:
#         train_sample = pd.read_csv(paths['data']['train_sample'])
#         test_sample = pd.read_csv(paths['data']['test_sample'])
#         return train_sample, test_sample
#     except FileNotFoundError as e:
#         print(f"Error reading sample data files: File not found {e.filename}")
#         raise
#     except pd.errors.ParserError as e:
#         print(f"Error reading sample data files: Parsing error {e}")
#         raise
#     except Exception as e:
#         print(f"Unexpected error reading sample data files: {e}")
#         raise

# def initialize_analysis_results(results_path, json_files):
#     """
#     Initialize analysis results by creating necessary JSON files.

#     Parameters:
#     results_path (str): Path to the directory for analysis results.
#     json_files (list): List of JSON files to initialize.
#     """
#     try:
#         for json_file in json_files:
#             file_path = os.path.join(results_path, json_file)
#             if not os.path.exists(file_path):
#                 with open(file_path, 'w') as f:
#                     f.write('{}')  # Create an empty JSON object
#     except Exception as e:
#         print(f"Error initializing analysis results: {e}")
#         raise






# # # src/utils/initialization.py

# # import os
# # import pandas as pd
# # from src.utils.data_loading_utils import load_sample_data_and_paths, initialize_analysis_results

# # def load_data_and_initialize_results(paths, json_files):
# #     """
# #     Load sample data and initialize analysis results.

# #     Parameters:
# #     paths (dict): Dictionary containing file paths.
# #     json_files (list): List of JSON files to initialize.

# #     Returns:
# #     tuple: A tuple containing train_sample DataFrame, test_sample DataFrame, and paths dictionary.
# #     """
# #     try:
# #         # Load sample data
# #         train_sample, test_sample, paths = load_sample_data_and_paths(paths)
        
# #         # Initialize analysis results
# #         initialize_analysis_results(paths['reports']['analysis_results'], json_files)
        
# #         return train_sample, test_sample, paths
# #     except Exception as e:
# #         print(f"Error loading data and initializing results: {e}")
# #         raise

# # def load_sample_data_and_paths(paths):
# #     """
# #     Load sample data and return the data along with updated paths.

# #     Parameters:
# #     paths (dict): Dictionary containing file paths.

# #     Returns:
# #     tuple: A tuple containing train_sample DataFrame, test_sample DataFrame, and paths dictionary.
# #     """
# #     try:
# #         train_sample, test_sample = load_sample_data(paths)
# #         return train_sample, test_sample, paths
# #     except Exception as e:
# #         print(f"Error loading sample data: {e}")
# #         raise

# # def load_sample_data(paths):
# #     """
# #     Load sample data from the specified paths.

# #     Parameters:
# #     paths (dict): Dictionary containing file paths.

# #     Returns:
# #     tuple: A tuple containing train_sample DataFrame and test_sample DataFrame.
# #     """
# #     try:
# #         train_sample = pd.read_csv(paths['data']['train_sample'])
# #         test_sample = pd.read_csv(paths['data']['test_sample'])
# #         return train_sample, test_sample
# #     except FileNotFoundError as e:
# #         print(f"Error reading sample data files: File not found {e.filename}")
# #         raise
# #     except pd.errors.ParserError as e:
# #         print(f"Error reading sample data files: Parsing error {e}")
# #         raise
# #     except Exception as e:
# #         print(f"Unexpected error reading sample data files: {e}")
# #         raise

# # def initialize_analysis_results(results_path, json_files):
# #     """
# #     Initialize analysis results by creating necessary JSON files.

# #     Parameters:
# #     results_path (str): Path to the directory for analysis results.
# #     json_files (list): List of JSON files to initialize.
# #     """
# #     try:
# #         for json_file in json_files:
# #             file_path = os.path.join(results_path, json_file)
# #             if not os.path.exists(file_path):
# #                 with open(file_path, 'w') as f:
# #                     f.write('{}')  # Create an empty JSON object
# #     except Exception as e:
# #         print(f"Error initializing analysis results: {e}")
# #         raise








# # # def load_data_and_initialize_results(paths, json_files):
# # #     """
# # #     Load sample data and initialize analysis results.

# # #     Parameters:
# # #     paths (dict): Dictionary containing file paths.
# # #     json_files (list): List of JSON files to initialize.

# # #     Returns:
# # #     tuple: A tuple containing train_sample DataFrame, test_sample DataFrame, and paths dictionary.
# # #     """
# # #     try:
# # #         # Load sample data
# # #         train_sample, test_sample, paths = load_sample_data_and_paths(paths)
        
# # #         # Initialize analysis results
# # #         initialize_analysis_results(paths['reports']['analysis_results'], json_files)
        
# # #         return train_sample, test_sample, paths
# # #     except Exception as e:
# # #         print(f"Error loading data and initializing results: {e}")
# # #         raise




# # # # src/utils/initialization.py

# # # import pandas as pd
# # # import os
# # # from src.utils.data_loading_utils import load_sample_data_and_paths, initialize_analysis_results

# # # def load_data_and_initialize_results(paths, json_files):
# # #     """
# # #     Load sample data and initialize analysis results.

# # #     Parameters:
# # #     paths (dict): Dictionary containing file paths.
# # #     json_files (list): List of JSON files to initialize.

# # #     Returns:
# # #     tuple: A tuple containing train_sample DataFrame, test_sample DataFrame, and paths dictionary.
# # #     """
# # #     try:
# # #         train_sample, test_sample, paths = load_sample_data_and_paths(paths)
# # #         initialize_analysis_results(paths['reports']['analysis_results'], json_files)
# # #         return train_sample, test_sample, paths
# # #     except Exception as e:
# # #         print(f"Error loading data and initializing results: {e}")
# # #         raise

# # # def load_sample_data_and_paths(paths):
# # #     """
# # #     Load sample data and return the data along with updated paths.

# # #     Parameters:
# # #     paths (dict): Dictionary containing file paths.

# # #     Returns:
# # #     tuple: A tuple containing train_sample DataFrame, test_sample DataFrame, and paths dictionary.
# # #     """
# # #     try:
# # #         train_sample, test_sample = load_sample_data(paths)
# # #         return train_sample, test_sample, paths
# # #     except Exception as e:
# # #         print(f"Error loading sample data: {e}")
# # #         raise

# # # def load_sample_data(paths):
# # #     """
# # #     Load sample data from the specified paths.

# # #     Parameters:
# # #     paths (dict): Dictionary containing file paths.

# # #     Returns:
# # #     tuple: A tuple containing train_sample DataFrame and test_sample DataFrame.
# # #     """
# # #     try:
# # #         train_sample = pd.read_csv(paths['data']['train_sample'])
# # #         test_sample = pd.read_csv(paths['data']['test_sample'])
# # #         return train_sample, test_sample
# # #     except Exception as e:
# # #         print(f"Error reading sample data files: {e}")
# # #         raise

# # # def initialize_analysis_results(results_path, json_files):
# # #     """
# # #     Initialize analysis results by creating necessary JSON files.

# # #     Parameters:
# # #     results_path (str): Path to the directory for analysis results.
# # #     json_files (list): List of JSON files to initialize.
# # #     """
# # #     try:
# # #         for json_file in json_files:
# # #             file_path = os.path.join(results_path, json_file)
# # #             if not os.path.exists(file_path):
# # #                 with open(file_path, 'w') as f:
# # #                     f.write('{}')  # Create an empty JSON object
# # #     except Exception as e:
# # #         print(f"Error initializing analysis results: {e}")
# # #         raise




# # # # src/utils/initialization.py

# # # import pandas as pd
# # # import os
# # # from src.utils.data_loading_utils import load_sample_data_and_paths, initialize_analysis_results

# # # def load_data_and_initialize_results(paths, json_files):
# # #     """
# # #     Load sample data and initialize analysis results.

# # #     Parameters:
# # #     paths (dict): Dictionary containing file paths.
# # #     json_files (list): List of JSON files to initialize.

# # #     Returns:
# # #     tuple: A tuple containing train_sample DataFrame, test_sample DataFrame, and paths dictionary.
# # #     """
# # #     try:
# # #         # Load sample data
# # #         train_sample, test_sample, paths = load_sample_data_and_paths(paths)
        
# # #         # Initialize analysis results
# # #         initialize_analysis_results(paths['reports']['analysis_results'], json_files)
        
# # #         return train_sample, test_sample, paths
# # #     except Exception as e:
# # #         print(f"Error loading data and initializing results: {e}")
# # #         raise

# # # def load_sample_data_and_paths(paths):
# # #     """
# # #     Load sample data and return the data along with updated paths.

# # #     Parameters:
# # #     paths (dict): Dictionary containing file paths.

# # #     Returns:
# # #     tuple: A tuple containing train_sample DataFrame, test_sample DataFrame, and paths dictionary.
# # #     """
# # #     try:
# # #         train_sample, test_sample = load_sample_data(paths)
# # #         return train_sample, test_sample, paths
# # #     except Exception as e:
# # #         print(f"Error loading sample data: {e}")
# # #         raise

# # # def load_sample_data(paths):
# # #     """
# # #     Load sample data from the specified paths.

# # #     Parameters:
# # #     paths (dict): Dictionary containing file paths.

# # #     Returns:
# # #     tuple: A tuple containing train_sample DataFrame and test_sample DataFrame.
# # #     """
# # #     try:
# # #         train_sample = pd.read_csv(paths['data']['train_sample'])
# # #         test_sample = pd.read_csv(paths['data']['test_sample'])
# # #         return train_sample, test_sample
# # #     except Exception as e:
# # #         print(f"Error reading sample data files: {e}")
# # #         raise

# # # def initialize_analysis_results(results_path, json_files):
# # #     """
# # #     Initialize analysis results by creating necessary JSON files.

# # #     Parameters:
# # #     results_path (str): Path to the directory for analysis results.
# # #     json_files (list): List of JSON files to initialize.
# # #     """
# # #     try:
# # #         for json_file in json_files:
# # #             file_path = os.path.join(results_path, json_file)
# # #             if not os.path.exists(file_path):
# # #                 with open(file_path, 'w') as f:
# # #                     f.write('{}')  # Create an empty JSON object
# # #     except Exception as e:
# # #         print(f"Error initializing analysis results: {e}")
# # #         raise





# # # # src/utils/initialization.py

# # # import pandas as pd
# # # import os
# # # from src.utils.data_loading_utils import load_sample_data_and_paths, initialize_analysis_results

# # # def load_data_and_initialize_results(paths, json_files):
# # #     """
# # #     Load sample data and initialize analysis results.

# # #     Parameters:
# # #     paths (dict): Dictionary containing file paths.
# # #     json_files (list): List of JSON files to initialize.

# # #     Returns:
# # #     tuple: A tuple containing train_sample DataFrame, test_sample DataFrame, and paths dictionary.
# # #     """
# # #     try:
# # #         # Load sample data
# # #         train_sample, test_sample, paths = load_sample_data_and_paths(paths)
        
# # #         # Initialize analysis results
# # #         initialize_analysis_results(paths['reports']['analysis_results'], json_files)
        
# # #         return train_sample, test_sample, paths
# # #     except Exception as e:
# # #         print(f"Error loading data and initializing results: {e}")
# # #         raise

# # # def load_sample_data_and_paths(paths):
# # #     """
# # #     Load sample data and return the data along with updated paths.

# # #     Parameters:
# # #     paths (dict): Dictionary containing file paths.

# # #     Returns:
# # #     tuple: A tuple containing train_sample DataFrame, test_sample DataFrame, and paths dictionary.
# # #     """
# # #     try:
# # #         train_sample, test_sample = load_sample_data(paths)
# # #         return train_sample, test_sample, paths
# # #     except Exception as e:
# # #         print(f"Error loading sample data: {e}")
# # #         raise

# # # def load_sample_data(paths):
# # #     """
# # #     Load sample data from the specified paths.

# # #     Parameters:
# # #     paths (dict): Dictionary containing file paths.

# # #     Returns:
# # #     tuple: A tuple containing train_sample DataFrame and test_sample DataFrame.
# # #     """
# # #     try:
# # #         train_sample = pd.read_csv(paths['data']['train_sample'])
# # #         test_sample = pd.read_csv(paths['data']['test_sample'])
# # #         return train_sample, test_sample
# # #     except Exception as e:
# # #         print(f"Error reading sample data files: {e}")
# # #         raise

# # # def initialize_analysis_results(results_path, json_files):
# # #     """
# # #     Initialize analysis results by creating necessary JSON files.

# # #     Parameters:
# # #     results_path (str): Path to the directory for analysis results.
# # #     json_files (list): List of JSON files to initialize.
# # #     """
# # #     try:
# # #         for json_file in json_files:
# # #             file_path = os.path.join(results_path, json_file)
# # #             if not os.path.exists(file_path):
# # #                 with open(file_path, 'w') as f:
# # #                     f.write('{}')  # Create an empty JSON object
# # #     except Exception as e:
# # #         print(f"Error initializing analysis results: {e}")
# # #         raise






# # # # src/utils/initialization.py

# # # from src.utils.data_loading_utils import load_sample_data_and_paths, initialize_analysis_results

# # # def load_data_and_initialize_results(paths, json_files):
# # #     """
# # #     Load sample data and initialize analysis results.

# # #     Parameters:
# # #     paths (dict): Dictionary containing file paths.
# # #     json_files (list): List of JSON files to initialize.

# # #     Returns:
# # #     tuple: A tuple containing train_sample DataFrame, test_sample DataFrame, and paths dictionary.
# # #     """
# # #     try:
# # #         train_sample, test_sample, paths = load_sample_data_and_paths()
# # #         initialize_analysis_results(paths['reports']['analysis_results'], json_files)
# # #         return train_sample, test_sample, paths
# # #     except Exception as e:
# # #         print(f"Error loading data and initializing results: {e}")
# # #         raise




# # # # import os
# # # # import sys
# # # # from src.config_loader import load_paths
# # # # from src.utils.directory_utils import ensure_directories_exist

# # # # def initialize_project_environment(marker_file='src/config_loader.py'):
# # # #     """
# # # #     Initialize the project environment by setting the project root and ensuring necessary directories exist.

# # # #     Parameters:
# # # #     marker_file (str): The name of the marker file to search for.

# # # #     Returns:
# # # #     dict: Configuration paths loaded from the config loader.
# # # #     """
# # # #     # Locate the project root
# # # #     def find_project_root(marker_file):
# # # #         current_dir = os.getcwd()
# # # #         while current_dir != os.path.dirname(current_dir):
# # # #             if os.path.isfile(os.path.join(current_dir, marker_file)):
# # # #                 return current_dir
# # # #             current_dir = os.path.dirname(current_dir)
# # # #         raise FileNotFoundError(f"Marker file '{marker_file}' not found in any parent directories.")

# # # #     project_root = find_project_root(marker_file)
# # # #     if project_root not in sys.path:
# # # #         sys.path.append(project_root)
# # # #     os.chdir(project_root)  # Ensure the working directory is set to project root
# # # #     print(f"Project root set to: {project_root}")

# # # #     # Load configuration paths
# # # #     paths = load_paths()
    
# # # #     # Ensure necessary directories exist
# # # #     ensure_directories_exist(paths)
    
# # # #     return paths









# # # # from src.utils.data_loading_utils import load_sample_data_and_paths, initialize_analysis_results

# # # # def load_data_and_initialize_results(paths, json_files):
# # # #     """
# # # #     Load sample data and initialize analysis results.

# # # #     Parameters:
# # # #     paths (dict): Dictionary containing file paths.
# # # #     json_files (list): List of JSON files to initialize.

# # # #     Returns:
# # # #     tuple: A tuple containing train_sample DataFrame, test_sample DataFrame, and paths dictionary.
# # # #     """
# # # #     try:
# # # #         train_sample, test_sample, paths = load_sample_data_and_paths()
# # # #         initialize_analysis_results(paths['reports']['analysis_results'], json_files)
# # # #         return train_sample, test_sample, paths
# # # #     except Exception as e:
# # # #         print(f"Error loading data and initializing results: {e}")
# # # #         raise

