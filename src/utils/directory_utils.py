# src/utils/directory_utils.py

import os

def create_directory(directory):
    """
    Create a single directory if it does not exist.

    Parameters:
    directory (str): Path of the directory to create.
    """
    try:
        if not os.path.isfile(directory):  # Ensure the path is not a file
            os.makedirs(directory, exist_ok=True)
            print(f"Directory ensured: {directory}")
    except Exception as e:
        print(f"Error ensuring directory {directory}: {e}")
        raise

def ensure_directories_exist(config):
    """
    Ensure that the necessary directories exist. Creates directories if they do not exist.

    Parameters:
    config (dict): Configuration dictionary containing directory paths.
    """
    for category, subpaths in config.items():
        for subkey, subvalue in subpaths.items():
            if isinstance(subvalue, str):
                create_directory(subvalue)




# # src/utils/directory_utils.py

# import os

# def create_directory(directory):
#     """
#     Create a single directory if it does not exist.

#     Parameters:
#     directory (str): Path of the directory to create.
#     """
#     try:
#         if not os.path.isdir(directory):  # Ensure the path is a directory
#             os.makedirs(directory, exist_ok=True)
#             print(f"Directory ensured: {directory}")
#     except Exception as e:
#         print(f"Error ensuring directory {directory}: {e}")
#         raise

# def ensure_directories_exist(config):
#     """
#     Ensure that the necessary directories exist. Creates directories if they do not exist.

#     Parameters:
#     config (dict): Configuration dictionary containing directory paths.
#     """
#     def create_directories(directories):
#         for key, value in directories.items():
#             if isinstance(value, dict):
#                 create_directories(value)  # Recursively handle nested directories
#             else:
#                 create_directory(value)

#     directories = config['directories']
#     create_directories(directories)

# # Example usage
# if __name__ == "__main__":
#     import yaml

#     with open('config/directories.yaml', 'r') as file:
#         config = yaml.safe_load(file)
    
#     ensure_directories_exist(config)





# # # src/utils/directory_utils.py

# # import os

# # def create_directory(directory):
# #     """
# #     Create a single directory if it does not exist.

# #     Parameters:
# #     directory (str): Path of the directory to create.
# #     """
# #     try:
# #         if not os.path.isfile(directory):  # Ensure the path is not a file
# #             os.makedirs(directory, exist_ok=True)
# #             print(f"Directory ensured: {directory}")
# #     except Exception as e:
# #         print(f"Error ensuring directory {directory}: {e}")
# #         raise

# # def ensure_directories_exist(config, directories=None):
# #     """
# #     Ensure that the necessary directories exist. Creates directories if they do not exist.

# #     Parameters:
# #     config (dict): Configuration dictionary containing directory paths.
# #     directories (list, optional): List of directories to ensure existence. If not provided, defaults to directories specified in the config.
# #     """
# #     if directories is None:
# #         directories = [
# #             config['data']['raw_train'],
# #             config['data']['raw_test'],
# #             config['data']['processed_train'],
# #             config['data']['processed_test'],
# #             config['reports']['univariate_numerical_summary'],
# #             config['reports']['univariate_numerical_plots'],
# #             config['reports']['univariate_categorical_summary'],
# #             config['reports']['univariate_categorical_plots'],
# #             config['reports']['figures']['missing_values']
# #         ]

# #     for directory in directories:
# #         create_directory(directory)

# # # Example usage
# # if __name__ == "__main__":
# #     config = {
# #         'data': {
# #             'raw_train': 'data/raw/train/',
# #             'raw_test': 'data/raw/test/',
# #             'processed_train': 'data/processed/train/',
# #             'processed_test': 'data/processed/test/'
# #         },
# #         'reports': {
# #             'univariate_numerical_summary': 'reports/univariate/numerical_summary/',
# #             'univariate_numerical_plots': 'reports/univariate/numerical_plots/',
# #             'univariate_categorical_summary': 'reports/univariate/categorical_summary/',
# #             'univariate_categorical_plots': 'reports/univariate/categorical_plots/',
# #             'figures': {
# #                 'missing_values': 'reports/figures/missing_values/'
# #             }
# #         }
# #     }
# #     ensure_directories_exist(config)
