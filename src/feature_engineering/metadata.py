# src/feature_engineering/metadata.py

import pandas as pd
from src.utils.common import load_yaml, save_yaml, load_json_file

def load_metadata(paths):
    return load_yaml(paths['config']['feature_metadata'])

def save_metadata(metadata, paths):
    save_yaml(metadata, paths['config']['feature_metadata'])

def update_feature_metadata_with_outlier_remediation(metadata, thresholds_exceeded, remediation_strategies):
    for feature, strategy in remediation_strategies.items():
        if feature in metadata['features']:
            metadata['features'][feature]['outlier_remediation_strategy'] = strategy
            metadata['features'][feature]['outlier_thresholds_exceeded'] = thresholds_exceeded.get(feature, {
                "Log Transformation": False,
                "Square Root Transformation": False,
                "Clipping": False,
                "Removing Outliers": False
            })
    return metadata

def update_metadata_with_outlier_metrics(metadata, outlier_metrics_df):
    for index, row in outlier_metrics_df.iterrows():
        feature = row['Feature']
        outlier_metrics = {
            'Z-Score Outliers': row['Z-Score Outliers'],
            'IQR Outliers': row['IQR Outliers'],
            'MAD Scores': row['MAD Scores'],
            'Isolation Forest Outliers': row['Isolation Forest Outliers'],
            'LOF Outliers': row['LOF Outliers'],
            'DBSCAN Outliers': row['DBSCAN Outliers'],
            'Skewness': row['Skewness'],
            'Kurtosis': row['Kurtosis']
        }

        if feature in metadata['features']:
            metadata['features'][feature]['outlier_metrics'] = outlier_metrics

def load_outlier_metrics(paths):
    outlier_metrics_list = load_json_file(paths['reports']['analysis_results'] + '/outlier_metrics.json')
    return pd.DataFrame(outlier_metrics_list)

def display_updated_metadata(metadata):
    updated_metadata_df = pd.DataFrame([
        {'Feature': feature, 'Outlier Metrics': details['outlier_metrics']}
        for feature, details in metadata['features'].items() if 'outlier_metrics' in details
    ])
    return updated_metadata_df
