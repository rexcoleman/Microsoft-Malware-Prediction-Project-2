# src/utils.py

import pandas as pd
import yaml

def save_dataframe(df, path):
    df.to_csv(path, index=False)

def load_yaml(file_path):
    with open(file_path, 'r') as file:
        return yaml.safe_load(file)

def save_yaml(data, file_path):
    with open(file_path, 'w') as file:
        yaml.safe_dump(data, file)

def initialize_feature_metadata(schema_path):
    schema = load_yaml(schema_path)
    feature_metadata = {"features": {}}
    for attribute, default_value in schema["default_attributes"].items():
        feature_metadata[attribute] = default_value
    return feature_metadata

def update_feature_metadata(feature_metadata, feature, updates):
    if feature not in feature_metadata["features"]:
        feature_metadata["features"][feature] = {}
    for key, value in updates.items():
        feature_metadata["features"][feature][key] = value
    return feature_metadata




# # src/utils.py

# import pandas as pd
# import yaml

# def save_dataframe(df, path):
#     df.to_csv(path, index=False)

# def load_yaml(file_path):
#     with open(file_path, 'r') as file:
#         return yaml.safe_load(file)

# def save_yaml(data, file_path):
#     with open(file_path, 'w') as file:
#         yaml.dump(data, file, default_flow_style=False)

# def initialize_feature_metadata(schema_path):
#     schema = load_yaml(schema_path)
#     feature_metadata = {"features": {}}
#     for attribute, default_value in schema["default_attributes"].items():
#         feature_metadata[attribute] = default_value
#     return feature_metadata

# def update_feature_metadata(feature_metadata, feature, updates):
#     if feature not in feature_metadata["features"]:
#         feature_metadata["features"][feature] = {}
#     for key, value in updates.items():
#         feature_metadata["features"][feature][key] = value
#     return feature_metadata
