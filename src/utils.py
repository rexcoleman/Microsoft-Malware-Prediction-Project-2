import pandas as pd
import yaml
import os

def save_dataframe(df, path):
    df.to_csv(path, index=False)

def load_yaml(file_path):
    with open(file_path, 'r') as file:
        return yaml.safe_load(file)

def save_yaml(data, file_path):
    with open(file_path, 'w') as file:
        yaml.safe_dump(data, file)

def initialize_feature_metadata(schema_path):
    schema = load_yaml(schema_path)
    feature_metadata = {"features": {}}
    for attribute, default_value in schema["default_attributes"].items():
        feature_metadata[attribute] = default_value
    return feature_metadata

def update_feature_metadata(feature_metadata, feature, updates):
    if feature not in feature_metadata["features"]:
        feature_metadata["features"][feature] = {}
    for key, value in updates.items():
        feature_metadata["features"][feature][key] = value
    return feature_metadata

def save_analysis_results(train_summary_stats, test_summary_stats, imputation_strategies, report_dir):
    tables_dir = os.path.join(report_dir, 'tables')
    os.makedirs(tables_dir, exist_ok=True)

    train_summary_stats.to_csv(os.path.join(tables_dir, 'train_summary_statistics.csv'), index=False)
    test_summary_stats.to_csv(os.path.join(tables_dir, 'test_summary_statistics.csv'), index=False)

    with open(os.path.join(tables_dir, 'imputation_strategies.yaml'), 'w') as file:
        yaml.safe_dump(imputation_strategies, file)

def ensure_directories_exist(config):
    directories = [
        config['data']['raw_train'],
        config['data']['raw_test'],
        config['data']['processed_train'],
        config['data']['processed_test'],
        config['reports']['univariate_numerical_summary'],
        config['reports']['univariate_numerical_plots'],
        config['reports']['univariate_categorical_summary'],
        config['reports']['univariate_categorical_plots']
    ]

    for directory in directories:
        os.makedirs(os.path.dirname(directory), exist_ok=True)






# # src/utils.py

# import pandas as pd
# import yaml

# def save_dataframe(df, path):
#     df.to_csv(path, index=False)

# def load_yaml(file_path):
#     with open(file_path, 'r') as file:
#         return yaml.safe_load(file)

# def save_yaml(data, file_path):
#     with open(file_path, 'w') as file:
#         yaml.safe_dump(data, file)

# def initialize_feature_metadata(schema_path):
#     schema = load_yaml(schema_path)
#     feature_metadata = {"features": {}}
#     for attribute, default_value in schema["default_attributes"].items():
#         feature_metadata[attribute] = default_value
#     return feature_metadata

# def update_feature_metadata(feature_metadata, feature, updates):
#     if feature not in feature_metadata["features"]:
#         feature_metadata["features"][feature] = {}
#     for key, value in updates.items():
#         feature_metadata["features"][feature][key] = value
#     return feature_metadata




# # # src/utils.py

# # import pandas as pd
# # import yaml

# # def save_dataframe(df, path):
# #     df.to_csv(path, index=False)

# # def load_yaml(file_path):
# #     with open(file_path, 'r') as file:
# #         return yaml.safe_load(file)

# # def save_yaml(data, file_path):
# #     with open(file_path, 'w') as file:
# #         yaml.dump(data, file, default_flow_style=False)

# # def initialize_feature_metadata(schema_path):
# #     schema = load_yaml(schema_path)
# #     feature_metadata = {"features": {}}
# #     for attribute, default_value in schema["default_attributes"].items():
# #         feature_metadata[attribute] = default_value
# #     return feature_metadata

# # def update_feature_metadata(feature_metadata, feature, updates):
# #     if feature not in feature_metadata["features"]:
# #         feature_metadata["features"][feature] = {}
# #     for key, value in updates.items():
# #         feature_metadata["features"][feature][key] = value
# #     return feature_metadata
