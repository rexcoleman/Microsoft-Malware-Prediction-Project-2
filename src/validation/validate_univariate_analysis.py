# src/validation/validate_sample_data.py

import logging
import pandas as pd
from tqdm.notebook import tqdm
from src.utils.display_utils import display_dataframe_as_html
from src.utils.data_loading_utils import read_csv_with_progress




def ensure_all_features_in_comparison_table(dataframe, comparison_table, metadata, comparison_table_path):
    """
    Ensure all features in the dataset are included in the comparison table.
    
    Parameters:
    dataframe (pd.DataFrame): The dataset.
    comparison_table (pd.DataFrame): The existing comparison table.
    metadata (dict): The feature metadata.
    comparison_table_path (str): The path to save the updated comparison table.
    
    Returns:
    pd.DataFrame: The updated comparison table.
    """
    # Extract existing features from the comparison table
    existing_features = comparison_table['Feature'].tolist()
    
    # Find missing features
    missing_features = [feature for feature in dataframe.columns if feature not in existing_features]
    
    # Create entries for missing features
    new_entries = []
    for feature in missing_features:
        classified_type = metadata['features'][feature].get('classified_data_type', 'Unknown')
        determined_type = determine_feature_type(feature, metadata)
        new_entries.append({
            'Feature': feature,
            'Previously Analyzed Type': classified_type,
            'Current Analyzed Type': determined_type,
            'Discrepancy': classified_type != determined_type,
            'Manual Review and Update': determined_type  # Initialize with current analyzed type
        })
    
    # Append new entries to the comparison table
    if new_entries:
        new_entries_df = pd.DataFrame(new_entries)
        comparison_table = pd.concat([comparison_table, new_entries_df], ignore_index=True)
        comparison_table.sort_values(by=['Discrepancy', 'Previously Analyzed Type'], ascending=[False, True], inplace=True)
    
    # Save the updated comparison table
    comparison_table.to_csv(comparison_table_path, index=False)
    
    # Print validation results
    print(f"Total features in the dataset: {len(dataframe.columns)}")
    print(f"Total features in the comparison table: {comparison_table.shape[0]}")
    print(f"Missing features added: {len(missing_features)}")
    
    return comparison_table
