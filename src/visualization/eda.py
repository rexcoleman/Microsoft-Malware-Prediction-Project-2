# src/visualization/eda.py

import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
from src.visualization.plot_utils import save_figure

def plot_histogram(data, feature, ax):
    sns.histplot(data[feature], kde=True, bins=30, ax=ax)
    ax.set_title(f'Distribution of {feature}')
    ax.set_xlabel(feature)
    ax.set_ylabel('Frequency')

def plot_boxplot(data, feature, ax):
    sns.boxplot(y=data[feature], ax=ax)
    ax.set_title(f'Box Plot of {feature}')
    ax.set_ylabel(feature)

def plot_kde(data, feature, ax):
    if pd.api.types.is_numeric_dtype(data[feature]):
        sns.kdeplot(data[feature], fill=True, warn_singular=False, ax=ax)
        ax.set_title(f'Kernel Density Estimate of {feature}')
        ax.set_xlabel(feature)
        ax.set_ylabel('Density')
    else:
        ax.set_title(f'KDE not applicable for {feature}')
        ax.axis('off')

def plot_countplot(data, feature, ax, top_n=10):
    value_counts = data[feature].value_counts().head(top_n)
    sns.barplot(x=value_counts.index, y=value_counts.values, ax=ax)
    ax.set_title(f'Top {top_n} Categories of {feature}')
    ax.set_xlabel(feature)
    ax.set_ylabel('Count')
    ax.set_xticklabels(ax.get_xticklabels(), rotation=45)

def plot_piechart(labels, sizes, ax, feature):
    ax.pie(sizes, labels=labels, autopct='%1.1f%%')
    ax.set_title(f'Top {len(labels)} Categories of {feature}')

def plot_binary_feature(data, feature, ax):
    sns.countplot(x=data[feature], ax=ax)
    ax.set_title(f'Count Plot of {feature}')
    ax.set_xlabel(f'{feature} Value')
    ax.set_ylabel('Count')
    total = len(data[feature].dropna())
    for p in ax.patches:
        height = p.get_height()
        ax.text(p.get_x() + p.get_width() / 2., height + 3, '{:1.2f}%'.format(100 * height / total), ha="center")

